{"version":3,"file":"static/js/880.72c34775.chunk.js","mappings":"8KAeA,MAmDA,EAnDuBA,IAAmB,IAAlB,SAAEC,GAAUD,EAClC,MAAME,EAAa,CACjBC,KAAMC,IAAsD,IAArD,KAAEC,EAAI,OAAEC,EAAM,UAAEC,EAAS,SAAEC,KAAaC,GAAOL,EACpD,MACMM,EADQF,EAASG,MAAM,MACHC,KAAI,CAACC,EAAGC,KAChC,MAAMC,EAAa,GACbC,EAjBd,SAAqBC,GACnB,IAAIC,EAAQ,EAEZ,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIG,QACP,MAAXH,EAAIE,GADsBA,IACVD,IAItB,OAAOA,EAAQ,CACjB,CAQoBG,CAAYR,GAcxB,OAZY,IAARG,IACFD,EAAWO,KAAK,YAChBP,EAAWO,KAAK,MAADC,OAAOP,MAItBQ,OAAOX,GAAGY,OAAOC,WAAW,OAC5BF,OAAOX,GAAGY,OAAOC,WAAW,SAE5BX,EAAWO,KAAK,eAIhBK,EAAAA,EAAAA,KAAA,QAEEC,MAAO,CACLC,WAAYd,EAAWe,SAAS,YAAW,GAAAP,OAAM,GAAKP,EAAG,MAAO,GAElET,UAAWQ,EAAWgB,KAAK,KAAKvB,SAE/BK,GANIC,EAOA,IAGX,OACEa,EAAAA,EAAAA,KAAA,QAAMpB,UAAWA,KAAeE,EAAKD,SAClCE,GACI,GAKb,OACEiB,EAAAA,EAAAA,KAACK,EAAAA,EAAa,CACZzB,UAAW,WACX0B,cAAe,CAACC,EAAAA,GAChBhC,WAAYA,EAAWM,SAEtBP,GACa,E,yCCtDpB,MAAMkC,E,OAAgBC,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gDAM1BC,EAAUA,KACd,MAAMC,GAAaC,EAAAA,EAAAA,QAAO,MAa1B,OAXAC,EAAAA,EAAAA,YAAU,KAAO,IAADC,EACd,MAAMC,EAAWC,SAASC,cAAc,UACxCF,EAASG,OAAQ,EACjBH,EAASI,IAAM,gCACfJ,EAASK,aAAa,OAAQ,mBAC9BL,EAASK,aAAa,aAAc,YACpCL,EAASK,aAAa,QAAS,gBAC/BL,EAASK,aAAa,cAAe,aACnB,QAAlBN,EAAAH,EAAWU,eAAO,IAAAP,GAAlBA,EAAoBQ,YAAYP,EAAS,GACxC,KAEIlB,EAAAA,EAAAA,KAACQ,EAAa,CAACkB,IAAKZ,GAA4B,EAyCzD,EAtCiBa,KACf,MAAOrD,EAAUsD,IAAeC,EAAAA,EAAAA,IAAeC,EAAAA,GACzCC,GAAWC,EAAAA,EAAAA,OACX,MAAEC,EAAK,OAAEC,EAAM,MAAEC,EAAK,OAAEC,IAAWC,EAAAA,EAAAA,MA0BzC,OAxBArB,EAAAA,EAAAA,YAAU,KACR,IAAIsB,EAAG,GAAA1C,OAAMqC,GAAgB,IAAErC,OAAGsC,EAAS,IAAMA,EAAS,IAAEtC,OAC1DuC,EAAQ,IAAMA,EAAQ,IAAEvC,OACvBwC,EAAS,IAAMA,EAAS,GAAE,OAgB7B,OAdAG,MAAMC,cAAkCF,GACrCG,MAAMC,GACEA,EAAIC,SAEZF,MAAMG,IACLhB,EAAYgB,EAAK,IAElBC,OAAOC,GAAMC,QAAQC,IAAIF,KAE5BG,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,WAGL,KACLxB,EAAY,GAAG,CAChB,GACA,CAACG,EAAUE,EAAOC,EAAQC,EAAOC,EAAQR,KAG1CyB,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAACC,GAAG,QAAO1E,SAAA,EACfmB,EAAAA,EAAAA,KAACwD,EAAc,CAAClF,SAAUA,IACzB4D,GAAU5D,GAAW0B,EAAAA,EAAAA,KAACa,EAAO,IAAM,IACpCb,EAAAA,EAAAA,KAACyD,EAAAA,GAAU,MACL,C","sources":["common/MarkdownLayout.js","router/Contents.js"],"sourcesContent":["import ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport \"../markdown.css\";\r\n\r\nfunction countSpaces(str) {\r\n  let count = 0;\r\n\r\n  for (let i = 0; i < str.length; i++) {\r\n    if (str[i] === \" \") count++;\r\n    else break;\r\n  }\r\n\r\n  return count / 2;\r\n}\r\n\r\nconst MarkdownLayout = ({ contents }) => {\r\n  const components = {\r\n    code: ({ node, inline, className, children, ...props }) => {\r\n      const pList = children.split(\"\\n\");\r\n      const newChildren = pList.map((p, idx) => {\r\n        const classLists = [];\r\n        const tab = countSpaces(p);\r\n\r\n        if (tab !== 0) {\r\n          classLists.push(\"tab-span\");\r\n          classLists.push(`tab${tab}`);\r\n        }\r\n\r\n        if (\r\n          String(p).trim().startsWith(\"//\") ||\r\n          String(p).trim().startsWith(\"...\")\r\n        ) {\r\n          classLists.push(\"annotation\");\r\n        }\r\n\r\n        return (\r\n          <span\r\n            key={idx}\r\n            style={{\r\n              marginLeft: classLists.includes(\"tab-span\") ? `${15 * tab}px` : 0,\r\n            }}\r\n            className={classLists.join(\" \")}\r\n          >\r\n            {p}\r\n          </span>\r\n        );\r\n      });\r\n      return (\r\n        <code className={className} {...props}>\r\n          {newChildren}\r\n        </code>\r\n      );\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ReactMarkdown\r\n      className={\"markdown\"}\r\n      remarkPlugins={[remarkGfm]}\r\n      components={components}\r\n    >\r\n      {contents}\r\n    </ReactMarkdown>\r\n  );\r\n};\r\n\r\nexport default MarkdownLayout;\r\n","import { Board, BufferZone } from \"../common/styled\";\r\nimport MarkdownLayout from \"../common/MarkdownLayout\";\r\nimport { atomContents } from \"../common/atom\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCommnet = styled.div`\r\n  .utterances {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst Comment = () => {\r\n  const commentsEl = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const scriptEl = document.createElement(\"script\");\r\n    scriptEl.async = true;\r\n    scriptEl.src = \"https://utteranc.es/client.js\";\r\n    scriptEl.setAttribute(\"repo\", \"JisooOvO/devlog\");\r\n    scriptEl.setAttribute(\"issue-term\", \"pathname\");\r\n    scriptEl.setAttribute(\"theme\", \"github-light\");\r\n    scriptEl.setAttribute(\"crossorigin\", \"anonymous\");\r\n    commentsEl.current?.appendChild(scriptEl);\r\n  }, []);\r\n\r\n  return <StyledCommnet ref={commentsEl}></StyledCommnet>;\r\n};\r\n\r\nconst Contents = () => {\r\n  const [contents, setContents] = useRecoilState(atomContents);\r\n  const navigate = useNavigate();\r\n  const { first, second, third, fourth } = useParams();\r\n\r\n  useEffect(() => {\r\n    let url = `${first ? first : \"\"}${second ? \"/\" + second : \"\"}${\r\n      third ? \"/\" + third : \"\"\r\n    }${fourth ? \"/\" + fourth : \"\"}.md`;\r\n\r\n    fetch(process.env.PUBLIC_URL + \"/md/\" + url)\r\n      .then((res) => {\r\n        return res.text();\r\n      })\r\n      .then((data) => {\r\n        setContents(data);\r\n      })\r\n      .catch((e) => console.log(e));\r\n\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    return () => {\r\n      setContents(\"\");\r\n    };\r\n  }, [navigate, first, second, third, fourth, setContents]);\r\n\r\n  return (\r\n    <Board id=\"board\">\r\n      <MarkdownLayout contents={contents}></MarkdownLayout>\r\n      {second && contents ? <Comment /> : \"\"}\r\n      <BufferZone />\r\n    </Board>\r\n  );\r\n};\r\n\r\nexport default Contents;\r\n"],"names":["_ref","contents","components","code","_ref2","node","inline","className","children","props","newChildren","split","map","p","idx","classLists","tab","str","count","i","length","countSpaces","push","concat","String","trim","startsWith","_jsx","style","marginLeft","includes","join","ReactMarkdown","remarkPlugins","remarkGfm","StyledCommnet","styled","div","_templateObject","_taggedTemplateLiteral","Comment","commentsEl","useRef","useEffect","_commentsEl$current","scriptEl","document","createElement","async","src","setAttribute","current","appendChild","ref","Contents","setContents","useRecoilState","atomContents","navigate","useNavigate","first","second","third","fourth","useParams","url","fetch","process","then","res","text","data","catch","e","console","log","window","scrollTo","top","behavior","_jsxs","Board","id","MarkdownLayout","BufferZone"],"sourceRoot":""}